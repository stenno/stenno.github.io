{"version":3,"file":"135.js","mappings":"mBAAe,SAASA,EAAkBC,EAAKC,IAClC,MAAPA,GAAeA,EAAMD,EAAIE,UAAQD,EAAMD,EAAIE,QAE/C,IAAK,IAAIC,EAAI,EAAGC,EAAO,IAAIC,MAAMJ,GAAME,EAAIF,EAAKE,IAC9CC,EAAKD,GAAKH,EAAIG,GAGhB,OAAOC,ECPT,IAEME,EAAc,SAACC,GACnB,ICCqCP,EAAKG,EDD1C,GCCqCH,EDDC,IAAIQ,YAAYD,GCCZJ,EDD1C,EEHa,SAAyBH,GACtC,GAAIK,MAAMI,QAAQT,GAAM,OAAOA,EDIxB,CAAeA,IELT,SAA+BA,EAAKG,GACjD,IAAIO,EAAY,MAAPV,EAAc,KAAyB,oBAAXW,QAA0BX,EAAIW,OAAOC,WAAaZ,EAAI,cAE3F,GAAU,MAANU,EAAJ,CACA,IAIIG,EAAIC,EAJJC,EAAO,GACPC,GAAK,EACLC,GAAK,EAIT,IACE,IAAKP,EAAKA,EAAGQ,KAAKlB,KAAQgB,GAAMH,EAAKH,EAAGS,QAAQC,QAC9CL,EAAKM,KAAKR,EAAGS,QAETnB,GAAKY,EAAKb,SAAWC,GAH4Ba,GAAK,IAK5D,MAAOO,GACPN,GAAK,EACLH,EAAKS,EACL,QACA,IACOP,GAAsB,MAAhBN,EAAW,QAAWA,EAAW,SAC5C,QACA,GAAIO,EAAI,MAAMH,GAIlB,OAAOC,GFtBuB,CAAqBf,EAAKG,IGJ3C,SAAqCqB,EAAGC,GACrD,GAAKD,EAAL,CACA,GAAiB,iBAANA,EAAgB,OAAO,EAAiBA,EAAGC,GACtD,IAAIC,EAAIC,OAAOC,UAAUC,SAASX,KAAKM,GAAGM,MAAM,GAAI,GAEpD,MADU,WAANJ,GAAkBF,EAAEO,cAAaL,EAAIF,EAAEO,YAAYC,MAC7C,QAANN,GAAqB,QAANA,EAAoBrB,MAAM4B,KAAKT,GACxC,cAANE,GAAqB,2CAA2CQ,KAAKR,GAAW,EAAiBF,EAAGC,QAAxG,GHF8D,CAA2BzB,EAAKG,IILjF,WACb,MAAM,IAAIgC,UAAU,6IJIgF,IDDpG,MAAQ,CAAEC,UADV,KACqBC,KADrB,KAC2BC,WAD3B,OAKFC,KAAKC,UAAY,SAACC,GAMhB,IALA,IAAMlC,EAASkC,EAAEC,KACGC,EAAiBpC,EAA7B+B,WACJM,EAAS,EACPC,EAAU,IAAIC,YAChBC,EAAS,GACNH,EAASD,GAAc,CAC5B,IAAMK,EAAgBJ,EAfC,GAgBvB,EAAwCtC,EAAYC,EAAOuB,MAAMc,EAAQI,IAAjEZ,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,KAAMC,EAAzB,EAAyBA,WACnBW,EAAgB1C,EAAOuB,MAAMkB,EAAeA,EAAgBV,GAC5DY,EAAUL,EAAQM,OAAO,IAAIC,WAAWH,IAExCI,EAAQ,CACZjB,UAF6B,IAAZA,EAAkBkB,KAAKC,MAAMlB,EAAO,KAGrDa,QAAAA,GAEFH,EAAO1B,KAAKgC,GACRN,EAAO7C,QAxBK,MAyBdqC,KAAKiB,YAAYT,GACjBA,EAAS,IAGXH,GA9BuB,GA8BQN,EAEjCC,KAAKiB,YAAYT,GACjBR,KAAKiB,YAAY,U","sources":["webpack://my-webpack-project/./node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","webpack://my-webpack-project/./src/workers/parseTTY.js","webpack://my-webpack-project/./node_modules/@babel/runtime/helpers/esm/slicedToArray.js","webpack://my-webpack-project/./node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","webpack://my-webpack-project/./node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","webpack://my-webpack-project/./node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","webpack://my-webpack-project/./node_modules/@babel/runtime/helpers/esm/nonIterableRest.js"],"sourcesContent":["export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","const TTYREC_HEADER_SIZE = 12; // bytes, 3 x Uint32\nconst HOLD_FRAMES = 1000;\nconst parseHeader = (buffer) => {\n  const [timestamp, usec, byteLength] = new Uint32Array(buffer);\n  return ({ timestamp, usec, byteLength });\n};\n\n/* eslint-disable-next-line no-restricted-globals */\nself.onmessage = (e) => {\n  const buffer = e.data;\n  const { byteLength: bufferLength } = buffer;\n  let offset = 0;\n  const decoder = new TextDecoder();\n  let frames = [];\n  while (offset < bufferLength) {\n    const payloadOffset = offset + TTYREC_HEADER_SIZE;\n    const { timestamp, usec, byteLength } = parseHeader(buffer.slice(offset, payloadOffset));\n    const payloadBuffer = buffer.slice(payloadOffset, payloadOffset + byteLength);\n    const payload = decoder.decode(new Uint8Array(payloadBuffer));\n    const toMillisec = timestamp * 1e3 + Math.floor(usec / 1e3);\n    const frame = {\n      timestamp: toMillisec,\n      payload,\n    };\n    frames.push(frame);\n    if (frames.length >= HOLD_FRAMES) {\n      self.postMessage(frames);\n      frames = [];\n    }\n    // self.postMessage(frame); /* eslint-disable-line no-restricted-globals */\n    offset += TTYREC_HEADER_SIZE + byteLength;\n  }\n  self.postMessage(frames);\n  self.postMessage('done'); /* eslint-disable-line no-restricted-globals */\n};\n","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"names":["_arrayLikeToArray","arr","len","length","i","arr2","Array","parseHeader","buffer","Uint32Array","isArray","_i","Symbol","iterator","_s","_e","_arr","_n","_d","call","next","done","push","value","err","o","minLen","n","Object","prototype","toString","slice","constructor","name","from","test","TypeError","timestamp","usec","byteLength","self","onmessage","e","data","bufferLength","offset","decoder","TextDecoder","frames","payloadOffset","payloadBuffer","payload","decode","Uint8Array","frame","Math","floor","postMessage"],"sourceRoot":""}